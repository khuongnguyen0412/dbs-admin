<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABBJJREFUaEPt
        mU1IVFEUx6cPK+hzE2UURAkFgszHfQ1kwRDVMmhhkBZUixbtdNMXBintKvowolUF1aJFi0AoolwkZmoz
        GrpRW0QuzBalIn3h2P9Mx9d435nne/NmnDfkH34M3HvOuee8+959990JzOt/UXs0uqorEjn7LhJ5BV7G
        I5HTrZWVK7m7OIQCSkEvCpjSeI8C17GZv4UCSpBwl1bAP8LhDrJhc/8Kt1CdWEAaZMPm/lQ8FNqARMf1
        xAXGyZbd/Cdc6XtC0pm4y27+UqdSO5BcUkvWjiT5sLs/NBUILEBib7REZ0epNvLlMIUXVqIjYqJOCIdr
        OExh1VdevgIJDVkSdM5QT0XFcg5XOOGd0Cgk5wosEg0crjDqMIxNSGRCT2waJDiM3yfgOfgy3S4w0RON
        buSwcy/MxiMhqRTouz1QVraUTQMtsdgyPNx3JFsCRT9k07kVls5KJCAutyiiV9qG4Hlagv4+3Z5JJgxj
        J5vOjR5XVS3CwN1aIiYo4gybWoRV6pzkw3RTbDbNv+JKnRCSMEH/YTa1CEVWSz4m4fBxNs2vEsHgGgw4
        YkkgHVx1NrcIhdA3iuz3lxEag83zJyR5VRhc5wGbW+RkP4Zir7B5ftRtGOUY6Lc+sA4SSbCLRSjkreSj
        8QuLyTZ2yb0wGy+EQSW+Sw8t78lGNVsRFNzMbrkVrvJ+acBMwH4ru5rCC3S9ZJsJzMo+ds2N6MWGwAP6
        QHZg5TrA7qYwo3skWxsG0l+qnoVpnvXzVQczYnmXoO2UZGuLUrXs7k18Ozi6r9NB0vc5hCm03ZBsZ2GU
        cuAQ2QuBbmmBndLOIUyh7Zlm4wylmjhEdoqHQgqBJi2BnTHCYUyhrV+zccoknq8Ih3EnWirxbLQKQR2T
        /sGEeAvR9kO3cQrlktVnMa7AISmgG/BMbOdw9HyUSjZuQIwqDudMvNx+0AO5BVfxMi7ISQJJeP6SBIOu
        lmMMekEI4guQWz2naS++Bcb0AB74yUh92TBGOXK6mYXbwc1poR39ccPYi0FLCNpuoM3V7sAG+1NK3Mu7
        YeTmtFAEF2MYS/daDmuK2tD/WbfPgiQuzi4OO1OpnalSbYKTazBII4e1CGNcknxck+mUErOR/WmhBgqp
        5rAWYZwayScr9FNKenGhw8tp4UyUOs+hLUKR9aJPFiDWpxmnlLinGyRDD3zEIKs5vClqoz7N1hPI/WIq
        OP1piYZvukEOeI3EzY8r3AZlGNTTlicDX+n8mQY4JnTmCloBBxnPq2Em8BF3lFaRJqmzmMBMX6cZuSl1
        FhnXqJCDQkdRkTofoO8ETE2zZFAUKPWUakitKFhdSlBMHX4TorEPSeWqVG1LLLY4VYQu2u8ngsHNnYax
        xY9Qbjk9IprXvOwUCPwBbSXCflsdurUAAAAASUVORK5CYII=
</value>
  </data>
</root>