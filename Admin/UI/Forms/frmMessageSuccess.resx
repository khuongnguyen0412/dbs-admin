<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABJJJREFUaEPd
        Wl2oFGUY3rqwH/shAimKjG676Ico0qydmU08kRdBG7TzzXaK6C6RIJWgWqJQQSu7yIq66FaCEN1vZjui
        SGhFUYoKElYI3lkXBdpR96jPO+c9ud/MO+fMzt/Z0wMPuzvv78z3937fbK1I1Pc1b7C0u9zSqm37qmNr
        b4vjq0+J9D28Fnie3VPLSJfNRgN1f/xuJPi27bsH8XkBvJSSpHvACtSbdre1lN1VjEu1q5xArbK1+gbJ
        TA0kl5Xko2drdyVHKB+4gRXgL5FECqT3E3U9Dlc8lu986UbLV58j2MV48MI5hVifFD6O7EA9iG70qxCw
        bB6vd1v3cxr5gMH4HByeiwSokpPobk1OJxscrVw4GmYmKovnwec5reHALVHEjFQU+452n+X00iEcE746
        G3E0CjyDB3wfpzk7GhPNm2HwW8TBKPHEmHZv4nSTEZYTsoPRYaA+5nRloB6yoVjFOpGXFxu+qnPacaA1
        fhSMqmCfa7XU4xK5fsdpm3B66knJoBIG6mXKYboA9faKOhLRg8LkBwFBL6ZYDXdyCiE6nc7VaJ0Ngl6M
        KGN8NptGY6J9FwTzsWacrnfHb+M0DOBm/hD0o+zXtXsnm4QV7RuCUumkRZdTMGAFL9wLOcaNbGdQq/Vs
        BkNffSsqlUg8vC85vIHmjuYiyA9F9RMZqP2h4cqetxgXqi0KtTpJC2+YQATYCr8r2iTz3Opdr1wPw9bD
        grBUOj33ac7bAJdGVCCKdkmsd72HanxQICqUQu1u57wNPLqjeR3kx2P6Kej4rqJptxMVlEZ0qaQ6Ca2x
        SbRJQVTFb6EsUR9KwhLYp6MiztuApb0nIM8+/QfeBzRj0T5cViiQiLOV8zbAZwG/SzZpSfeANcT7QhKm
        Ip5EY3frHpQVH4nyGWK/T7Mj524A/XubaDME6R4ydy0Yr+NcQuBa0lg7T7MRqxnAwB+DvIhq+/1Mg52e
        IudiAC2zMaqLcbGZxQaoS6UsQ+bk9GCns1hBOCvxJDmfGDCdv3dFTx0Z069ewyIDiPuZ4TMH6ZAk44Lo
        /UBPlHOKAY7fgV4VXSpkuCDyQvRvVJiCB2bbO9MD4q8GHtvdugW2pyK+8vBsfd/4taFz/NgTEablz86e
        9q2hk5RAK30t+MnDHrsOq9/XBYWUdA+mOtUAoPuM7CM7seV9jd3XaisCdTsupqv/BdLp/FwtQxso6P4Z
        tc3JC1iflnCIaWBKDQTF1KTDgKTSnIAJ4CvJLhcDpdn9FThByxKVh2BSyyDgi5J+bnZbj3MIE4UcBwXq
        +8GWsXe178B0/Zeom4OJx0EEqk6hVMAhhHvU1t5qy/eewu9jcXluTlld7xFOWwbudOEfmRJocYHy4Zjx
        6PDQfwvgXMAdL/zXCjOwfNeB4WTE0XxykmZWTm84/C9evc2AXzX8M+C0av6duSWiCMfMQn89PQPaf/DU
        XMVhd5+m2FL/eEObGATZLwQviN7ehm4/wOHKB7364kIzc9U8wD62En5i7VQFwi2AdtciGdqcDTNdT2KK
        n0AZsybpHcm8gc6u0v7xLOmcKxtqtcvNIkt5KnZzzQAAAABJRU5ErkJggg==
</value>
  </data>
</root>